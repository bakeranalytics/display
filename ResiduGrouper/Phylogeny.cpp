/*
 *  Phylogeny.cpp
 *  ResidueGrouper
 *
 *  Created by brian on 10/9/09.
 *  Copyright 2009 __MyCompanyName__. All rights reserved.
 *
 */

#include "Phylogeny.h"




/** Initializes phylogenic tree distances via delegation. */
Phylogeny::Phylogeny(){
	//load
	loadTree();
	shiftTree();
	loadTreeVector();
	
	//initialize
	excludedSpecies.resize(dim);//one for each species
	for(int i=0; i<dim; i++){//for each species
		excludedSpecies[i] = -1;//default exclusion
	}
	treeAverages.resize(dim);//one for each species
	//computeTreeAverages();
}


////////////// PUBLIC FUNCTIONS  ////////////////
/** 
 @return the distance between the two species mapped to the input parameters.
 @param r maps to one of the two species whose relationship is being queried.
 @param s maps to one of the two species whose relationship is being queried.
 */
double Phylogeny::getDistance(int r, int s){
	return phylogenicDistance[r][s];
}



/** flags species for inclusion in tree averaging and returns the tree number.*/
int Phylogeny::includeSpecies(const string& s){
	int treeNumber  = getTreeNumber(s);
	if(treeNumber != -1){
		excludedSpecies[treeNumber] = 0;//flag for inclusion
	}
	return treeNumber;
}



/** Matches an index number associated with the input species name.  If no match is found, -1 is returned.*/
int Phylogeny::getTreeNumber(const string& s){
	int treeNumber = -1;//default to no-match flag
	string::size_type flag;
	
	//cout <<s<<endl;//test
	for(int i=0; i<dim-1; i++){//look for match in each species
		flag = s.find(treeNumberVec[i]);
		//cout << "treeNode: "<<i<<"  "<<treeNumberVec[i]<<"    "<<flag<<"  ?  "<<string::npos<<endl;//test
		if(flag != string::npos){
			treeNumber = i;
			break;
		}
	}
	//cout <<s<<"\t"<<treeNumber<<endl;//test
	
	return treeNumber;
}	


/** print the tree matrix to the command line. */
void Phylogeny::printTree(){
	cout << "tree"<<endl;
	for(int i=0; i<dim; i++){//output to cmd
		for(int j=0; j<dim; j++){
			cout<< "\t" << phylogenicDistance[i][j];
		}
		cout << endl;
	}
}



/** flqgs the indexed species to be excluded from tree average computations. */
void Phylogeny::excludeSpecies(int i){
	excludedSpecies[i] = 1;
	//computeTreeAverages();
}


/** computes the average distance each species is from all others and 
 a sum of the symmetric off-diagonals (unique off-diagnoal values) for use as a normalizing factor.
 excluded species are given value of -inf.
 NOTE: this normalization factor uses all species in the phylogeny and is not appropriate for alignments with a partial species set.  They should use the norm factor computed in the Alignment class. */
void Phylogeny::computeTreeAverages(){
	double sum = 0;//total distance to all other species
	for(int i=0; i<dim; i++){//for each species
		if (excludedSpecies[i] != 0){//excluded species -> asssign to -inf
			treeAverages[i] = -INFINITY;
		}else{//compute the average
			sum = 0;//reset
			for(int j=0; j<dim; j++){//for each species
				if (i != j && excludedSpecies[j] == 0){//skip itself and excluded species
					sum += phylogenicDistance[i][j];
				}
			}
		treeAverages[i] = sum / dim;
		}
		//cout<<"avg: "<< treeNumberVec[i] << "\t" << treeAverages[i]<<endl;//test
	}
	
	valdarNorm = 0;
	for(int i=0; i<dim; i++){//for each species
		for(int j=i+1; j<dim; j++){//for each species
			valdarNorm += treeAverages[i] * treeAverages[j];
		}
	}
	//cout<< "valdarNorm\t" << valdarNorm <<endl;//test
	
}



////////////// PRIVATE FUNCTIONS  ////////////////
/** Shifts the phylogenic tree distances by species index.  these shifts were generated by simulated annealing.*/
void Phylogeny::shiftTree(){
	double shift[14] = {-0.0333, -0.00734, -0.0986, -0.0579, 0.001, 0, 0.0217, 0.0558, 0.0592, -0.0274, 0.330, -0.331, -0.145, 0};//see loadTreeVector for associated species order
	for(int i=0; i<dim; i++){//for each species
		for(int j=0; j<dim; j++){//for each species
			if (i != j){
				//cout <<i<<","<<j<<": "<< phylogenicDistance[i][j] <<" -> "<< phylogenicDistance[i][j]+shift[i]<<endl;//test
				phylogenicDistance[i][j] = phylogenicDistance[i][j] + shift[i];
				phylogenicDistance[j][i] = phylogenicDistance[j][i] + shift[i];
			}
		}
	}
	
}


/** Loads the numeric ID for each species corresponding to its position in the tree distance matrix.*/
void Phylogeny::loadTreeVector(){
	treeNumberVec.resize(dim);//one for each species
	treeNumberVec[0] = "Hsap";
	treeNumberVec[1] = "Chimp";
	treeNumberVec[2] = "Macaque";
	treeNumberVec[3] = "Mouse";
	treeNumberVec[4] = "Rat";
	treeNumberVec[5] = "Rabbit";
	treeNumberVec[6] = "Dog";
	treeNumberVec[7] = "Cow";
	treeNumberVec[8] = "Opossum";
	treeNumberVec[9] = "Chicken";
	treeNumberVec[10] = "Frog";
	treeNumberVec[11] = "Zebrafish";
	treeNumberVec[12] = "Pufferfish";
	treeNumberVec[13] = "Tretraodo";
}	


/** Loads the phylogenic tree distances - degenerate set.  
 Distances are loaded on half the matrix initially & then copied to the other half; so, the matrix is fully populated.
 See Phylogen.h for the number-species map and sequence file modification instructions. 
 Some of these values are identical (same distances between different species-pairs.*/
void Phylogeny::loadTree(){
	for(int i=0; i<dim; i++){//initialize the matrix to -infinity
		for(int j=0; j<dim; j++){
			phylogenicDistance[i][j] = -INFINITY;
		}
	}
	
	//load the distance values
	phylogenicDistance[0][1] = 0.01;// man to chimp
	phylogenicDistance[0][2] = 0.055;// man to monkey, rhe
	phylogenicDistance[0][3] = 0.465;// man to mouse
	phylogenicDistance[0][4] = 0.445;// man to rat
	phylogenicDistance[0][5] = 0.325;// man to rabbit
	phylogenicDistance[0][6] = 0.335;// man to dog
	phylogenicDistance[0][7] = 0.285;// man to cow
	phylogenicDistance[0][8] = 0.765;// man to opossum
	phylogenicDistance[0][9] = 1.125;// man to chicken
	phylogenicDistance[0][10] = 1.275;// man to frog
	phylogenicDistance[0][11] = 2.125;// man to zebrafish
	phylogenicDistance[0][12] = 2.075;// man to pufferfish
	phylogenicDistance[0][13] = 2.075;// man to tretraodo
	
	phylogenicDistance[1][2] = 0.055;// chimp to monkey, rhe
	phylogenicDistance[1][3] = 0.465;// chimp to mouse
	phylogenicDistance[1][4] = 0.445;// chimp to rat
	phylogenicDistance[1][5] = 0.325;// chimp to rabbit
	phylogenicDistance[1][6] = 0.335;// chimp to dog
	phylogenicDistance[1][7] = 0.285;// chimp to cow
	phylogenicDistance[1][8] = 0.765;// chimp to opossum
	phylogenicDistance[1][9] = 1.125;// chimp to chicken
	phylogenicDistance[1][10] = 1.275;// chimp to frog
	phylogenicDistance[1][11] = 2.125;// chimp to zebrafish
	phylogenicDistance[1][12] = 2.075;// chimp to pufferfish
	phylogenicDistance[1][13] = 2.075;// chimp to tretraodo
	
	phylogenicDistance[2][3] = 0.47;// monkey to mouse
	phylogenicDistance[2][4] = 0.45;// monkey to rat
	phylogenicDistance[2][5] = 0.33;// monkey to rabbit
	phylogenicDistance[2][6] = 0.34;// monkey to dog
	phylogenicDistance[2][7] = 0.29;// monkey to cow
	phylogenicDistance[2][8] = 0.77;// monkey to opossum
	phylogenicDistance[2][9] = 1.13;// monkey to chicken
	phylogenicDistance[2][10] = 1.28;// monkey to frog
	phylogenicDistance[2][11] = 2.13;// monkey to zebrafish
	phylogenicDistance[2][12] = 2.08;// monkey to pufferfish
	phylogenicDistance[2][13] = 2.08;// monkey to tretraodo
	
	phylogenicDistance[3][4] = 0.18;// mouse to rat
	phylogenicDistance[3][5] = 0.54;// mouse to rabbit
	phylogenicDistance[3][6] = 0.41;// mouse to dog
	phylogenicDistance[3][7] = 0.36;// mouse to cow
	phylogenicDistance[3][8] = 1.04;// mouse to opossum
	phylogenicDistance[3][9] = 1.4;// mouse to chicken
	phylogenicDistance[3][10] = 1.55;// mouse to frog
	phylogenicDistance[3][11] = 2.4;// mouse to zebrafish
	phylogenicDistance[3][12] = 2.35;// mouse to pufferfish
	phylogenicDistance[3][13] = 2.35;// mouse to tretraodo
	
	phylogenicDistance[4][5] = 0.52;// rat to rabbit
	phylogenicDistance[4][6] = 0.39;// rat to dog
	phylogenicDistance[4][7] = 0.34;// rat to cow
	phylogenicDistance[4][8] = 1.02;// rat to opossum
	phylogenicDistance[4][9] = 1.38;// rat to chicken
	phylogenicDistance[4][10] = 1.53;// rat to frog
	phylogenicDistance[4][11] = 2.38;// rat to zebrafish
	phylogenicDistance[4][12] = 2.33;// rat to pufferfish
	phylogenicDistance[4][13] = 2.33;// rat to tretraodo
	
	phylogenicDistance[5][6] = 0.47;// rabbit to dog
	phylogenicDistance[5][7] = 0.42;// rabbit to cow
	phylogenicDistance[5][8] = 0.9;// rabbit to opossum
	phylogenicDistance[5][9] = 1.26;// rabbit to chicken
	phylogenicDistance[5][10] = 1.41;// rabbit to frog
	phylogenicDistance[5][11] = 2.26;// rabbit to zebrafish
	phylogenicDistance[5][12] = 2.21;// rabbit to pufferfish
	phylogenicDistance[5][13] = 2.21;// rabbit to tretraodo
	
	phylogenicDistance[6][7] = 0.35;// dog to cow
	phylogenicDistance[6][8] = 0.89;// dog to opossum
	phylogenicDistance[6][9] = 1.25;// dog to chicken
	phylogenicDistance[6][10] = 1.4;// dog to frog
	phylogenicDistance[6][11] = 2.25;// dog to zebrafish
	phylogenicDistance[6][12] = 2.2;// dog to pufferfish
	phylogenicDistance[6][13] = 2.2;// dog to tretraodo
	
	phylogenicDistance[7][8] = 0.84;// cow to opossum
	phylogenicDistance[7][9] = 1.2;// cow to chicken
	phylogenicDistance[7][10] = 1.35;// cow to frog
	phylogenicDistance[7][11] = 2.2;// cow to zebrafish
	phylogenicDistance[7][12] = 2.15;// cow to pufferfish
	phylogenicDistance[7][13] = 2.15;// cow to tretraodo
	
	phylogenicDistance[8][9] = 1.04;// opossum to chicken
	phylogenicDistance[8][10] = 1.19;// opossum to frog
	phylogenicDistance[8][11] = 2.04;// opossum to zebrafish
	phylogenicDistance[8][12] = 1.99;// opossum to pufferfish
	phylogenicDistance[8][13] = 1.99;// opossum to tretraodo
	
	phylogenicDistance[9][10] = 1.25;// chicken to frog
	phylogenicDistance[9][11] = 2.1;// chicken to zebrafish
	phylogenicDistance[9][12] = 2.05;// chicken to pufferfish
	phylogenicDistance[9][13] = 2.05;// chicken to tretraodo
	
	phylogenicDistance[10][11] = 1.85;// frog to zebrafish
	phylogenicDistance[10][12] = 1.8;// frog to pufferfish
	phylogenicDistance[10][13] = 1.8;// frog to tretraodo
	
	phylogenicDistance[11][12] = 1.31;// zebrafish to pufferfish
	phylogenicDistance[11][13] = 1.31;// zebrafish to tretraodo
	
	phylogenicDistance[12][13] = 0.34;// pufferfish to tretraodo
	
	
	for(int i=0; i<dim; i++){//fill the other side of the matrix
		phylogenicDistance[i][i] = 0;//set diagonal to 0
		for(int j=i; j<dim; j++){
			phylogenicDistance[j][i] = phylogenicDistance[i][j];
		}
	}	
	
}


/** Loads the phylogenic tree distances.
 Distances are loaded on half the matrix initially & then copied to the other half; so, the matrix is fully populated.
 See Phylogen.h for the number-species map and sequence file modification instructions. 
 NOTE: some of these values have been modified from the original to remove degeneracy.  each species-pair needs to have a unique
 distance for the simulated annealilng to have full freedom to create a new set of distances.*/
void Phylogeny::loadModifiedTree(){
	for(int i=0; i<dim; i++){//initialize the matrix to -infinity
		for(int j=0; j<dim; j++){
			phylogenicDistance[i][j] = -INFINITY;
		}
	}
	
	//load the distance values
	phylogenicDistance[0][1] = 0.01;// man to chimp
	phylogenicDistance[0][2] = 0.055;// man to monkey, rhe
	phylogenicDistance[0][3] = 0.465;// man to mouse
	phylogenicDistance[0][4] = 0.445;// man to rat
	phylogenicDistance[0][5] = 0.325;// man to rabbit
	phylogenicDistance[0][6] = 0.335;// man to dog
	phylogenicDistance[0][7] = 0.285;// man to cow
	phylogenicDistance[0][8] = 0.765;// man to opossum
	phylogenicDistance[0][9] = 1.125;// man to chicken
	phylogenicDistance[0][10] = 1.275;// man to frog
	phylogenicDistance[0][11] = 2.125;// man to zebrafish
	phylogenicDistance[0][12] = 2.075;// man to pufferfish
	phylogenicDistance[0][13] = 2.074;// man to tretraodo
	
	phylogenicDistance[1][2] = 0.05;// chimp to monkey, rhe
	phylogenicDistance[1][3] = 0.46;// chimp to mouse
	phylogenicDistance[1][4] = 0.44;// chimp to rat
	phylogenicDistance[1][5] = 0.32;// chimp to rabbit
	phylogenicDistance[1][6] = 0.33;// chimp to dog
	phylogenicDistance[1][7] = 0.28;// chimp to cow
	phylogenicDistance[1][8] = 0.76;// chimp to opossum
	phylogenicDistance[1][9] = 1.12;// chimp to chicken
	phylogenicDistance[1][10] = 1.27;// chimp to frog
	phylogenicDistance[1][11] = 2.12;// chimp to zebrafish
	phylogenicDistance[1][12] = 2.07;// chimp to pufferfish
	phylogenicDistance[1][13] = 2.072;// chimp to tretraodo
	
	phylogenicDistance[2][3] = 0.47;// monkey to mouse
	phylogenicDistance[2][4] = 0.45;// monkey to rat
	phylogenicDistance[2][5] = 0.331;// monkey to rabbit
	phylogenicDistance[2][6] = 0.34011;// monkey to dog
	phylogenicDistance[2][7] = 0.29;// monkey to cow
	phylogenicDistance[2][8] = 0.77;// monkey to opossum
	phylogenicDistance[2][9] = 1.13;// monkey to chicken
	phylogenicDistance[2][10] = 1.28;// monkey to frog
	phylogenicDistance[2][11] = 2.13;// monkey to zebrafish
	phylogenicDistance[2][12] = 2.081;// monkey to pufferfish
	phylogenicDistance[2][13] = 2.08;// monkey to tretraodo
	
	phylogenicDistance[3][4] = 0.182;// mouse to rat
	phylogenicDistance[3][5] = 0.542;// mouse to rabbit
	phylogenicDistance[3][6] = 0.412;// mouse to dog
	phylogenicDistance[3][7] = 0.362;// mouse to cow
	phylogenicDistance[3][8] = 1.042;// mouse to opossum
	phylogenicDistance[3][9] = 1.42;// mouse to chicken
	phylogenicDistance[3][10] = 1.56;// mouse to frog
	phylogenicDistance[3][11] = 2.42;// mouse to zebrafish
	phylogenicDistance[3][12] = 2.33;// mouse to pufferfish
	phylogenicDistance[3][13] = 2.35;// mouse to tretraodo
	
	phylogenicDistance[4][5] = 0.52;// rat to rabbit
	phylogenicDistance[4][6] = 0.39;// rat to dog
	phylogenicDistance[4][7] = 0.34;// rat to cow
	phylogenicDistance[4][8] = 1.02;// rat to opossum
	phylogenicDistance[4][9] = 1.38;// rat to chicken
	phylogenicDistance[4][10] = 1.53;// rat to frog
	phylogenicDistance[4][11] = 2.38;// rat to zebrafish
	phylogenicDistance[4][12] = 2.33011;// rat to pufferfish
	phylogenicDistance[4][13] = 2.33;// rat to tretraodo
	
	phylogenicDistance[5][6] = 0.473;// rabbit to dog
	phylogenicDistance[5][7] = 0.423;// rabbit to cow
	phylogenicDistance[5][8] = 0.903;// rabbit to opossum
	phylogenicDistance[5][9] = 1.263;// rabbit to chicken
	phylogenicDistance[5][10] = 1.413;// rabbit to frog
	phylogenicDistance[5][11] = 2.263;// rabbit to zebrafish
	phylogenicDistance[5][12] = 2.213;// rabbit to pufferfish
	phylogenicDistance[5][13] = 2.212;// rabbit to tretraodo
	
	phylogenicDistance[6][7] = 0.354;// dog to cow
	phylogenicDistance[6][8] = 0.894;// dog to opossum
	phylogenicDistance[6][9] = 1.254;// dog to chicken
	phylogenicDistance[6][10] = 1.404;// dog to frog
	phylogenicDistance[6][11] = 2.254;// dog to zebrafish
	phylogenicDistance[6][12] = 2.204;// dog to pufferfish
	phylogenicDistance[6][13] = 2.203;// dog to tretraodo
	
	phylogenicDistance[7][8] = 0.846;// cow to opossum
	phylogenicDistance[7][9] = 1.206;// cow to chicken
	phylogenicDistance[7][10] = 1.356;// cow to frog
	phylogenicDistance[7][11] = 2.206;// cow to zebrafish
	phylogenicDistance[7][12] = 2.156;// cow to pufferfish
	phylogenicDistance[7][13] = 2.145;// cow to tretraodo
	
	phylogenicDistance[8][9] = 1.047;// opossum to chicken
	phylogenicDistance[8][10] = 1.197;// opossum to frog
	phylogenicDistance[8][11] = 2.047;// opossum to zebrafish
	phylogenicDistance[8][12] = 1.997;// opossum to pufferfish
	phylogenicDistance[8][13] = 1.996;// opossum to tretraodo
	
	phylogenicDistance[9][10] = 1.258;// chicken to frog
	phylogenicDistance[9][11] = 2.108;// chicken to zebrafish
	phylogenicDistance[9][12] = 2.058;// chicken to pufferfish
	phylogenicDistance[9][13] = 2.057;// chicken to tretraodo
	
	phylogenicDistance[10][11] = 1.859;// frog to zebrafish
	phylogenicDistance[10][12] = 1.809;// frog to pufferfish
	phylogenicDistance[10][13] = 1.808;// frog to tretraodo
	
	phylogenicDistance[11][12] = 1.311;// zebrafish to pufferfish
	phylogenicDistance[11][13] = 1.31;// zebrafish to tretraodo
	
	phylogenicDistance[12][13] = 0.341;// pufferfish to tretraodo
	
	
	for(int i=0; i<dim; i++){//fill the other side of the matrix
		phylogenicDistance[i][i] = 0;//set diagonal to 0
		for(int j=i; j<dim; j++){
			phylogenicDistance[j][i] = phylogenicDistance[i][j];
		}
	}	
	
	/*/test
	 for(int i=0; i<dim; i++){//fill the other side of the matrix
	 for(int j=0; j<dim; j++){
	 cout << phylogenicDistance[i][j]<<"\t";
	 }
	 cout << endl;//tst
	 }	
	 */
}

